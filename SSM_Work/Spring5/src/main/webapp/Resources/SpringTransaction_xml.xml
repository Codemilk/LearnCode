<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-4.3.xsd

">
    <context:component-scan base-package="Transaction"></context:component-scan>

    <!--引入外部文件-->
    <context:property-placeholder location="db.properties"></context:property-placeholder>
    <!--连接数据库-->
    <bean class="com.alibaba.druid.pool.DruidDataSource" id="dataSourceFactory">
        <property name="driverClassName" value="${jdbc.driverClassName}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="initialSize" value="${initialSize}"></property>
        <property name="maxActive" value="${maxActive}"></property>
        <property name="maxWait" value="${maxWait}"></property>
        <property name="minIdle" value="${minIdle}"></property>
        <property name="validationQuery" value="${validationQuery}"></property>
        <property name="testWhileIdle" value="${testWhileIdle}"></property>
        <property name="testOnBorrow" value="${testOnBorrow}"></property>
        <property name="testOnReturn" value="${testOnReturn}"></property>
    </bean>
    <!--创建jdbcTemplate-->
    <bean class="org.springframework.jdbc.core.JdbcTemplate" id="jdbcTemplate">
        <property name="dataSource" ref="dataSourceFactory"></property>
    </bean>

    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="dataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceFactory"></property>
    </bean>

<!--配置通知-->
       <tx:advice transaction-manager="dataSourceTransactionManager" id="transactionInterceptor">
<!--           配置事物的参数-->
           <tx:attributes>
                     <!--指定那种规则的方法上面添加事务并设置属性-->
               <tx:method name="TransferMoney" read-only="false" propagation="REQUIRES_NEW" isolation="REPEATABLE_READ" timeout="-1"/>
           </tx:attributes>
       </tx:advice>

<!--    配合切入点切面-->
    <aop:config >
        <aop:pointcut id="f" expression="execution(* Transaction.service.UserService.*(..))"/>

        <aop:advisor advice-ref="transactionInterceptor" pointcut-ref="f"></aop:advisor>
    </aop:config>
</beans>